{"version":3,"sources":["library/utils/regexp.js","library/utils/validation-rule.js","pages/users/EditModal.jsx","pages/users/index.jsx"],"names":["ip","port","mobile","landLine","qq","cardNumber","number","integer","positiveInteger","numberWithTwoDecimal","validation_rule","message","arguments","length","undefined","pattern","regexps","noSpace","validator","rule","value","callback","test","landline","email","type","numberRange","min","max","Number","stringFormat","numberMaxRange","numberMinRange","stringByteRangeLength","getStringByteLength","stringByteMinLength","stringByteMaxLength","arrayMaxLength","Array","isArray","userNameExist","key","prevValue","this","_","debounce","console","log","EditModal","config","ajax","modal","title","props","isEdit","es_form","create","state","loading","data","fetchData","_this","id","setState","get","concat","then","res","finally","handleSubmit","form","validateFieldsAndScroll","err","values","ajaxMethod","put","post","successTip","onOk","_this$props","_this$state","formProps","labelWidth","react_default","a","createElement","components","okText","cancelText","onCancel","resetFields","onSubmit","Object","assign","field","initialValue","label","name","required","rules","age","job","options","position","Component","UserCenter","path","dataSource","selectedRowKeys","total","pageNum","pageSize","deleting","singleDeleting","visible","columns","dataIndex","width","render","record","items","onClick","color","confirm","onConfirm","handleDelete","handleSearch","e","preventDefault","params","objectSpread","list","del","errorTip","handleBatchDelete","content","style","padding","fontSize","ids","_this2","_this$state2","paddingLeft","disabledDelete","page_content","layout","es_button","htmlType","icon","text","disabled","rowSelection","onChange","rowKey","pagination","onPageNumChange","onPageSizeChange","EditModal_EditModal"],"mappings":"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","file":"static/js/16.8f4f86c6.chunk.js","sourcesContent":["/*\n * 通用正则表达式\n * */\n// ip\nexport const ip = /^(\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/;\n\n// 端口号\nexport const port = /^([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-4]\\d{4}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/;\n\n// 手机号\nexport const mobile = /^1\\d{10}$/; // /^1[3|4|5|7|8][0-9]{9}$/;\n\n// 座机号\nexport const landLine = /^([0-9]{3,4}-)?[0-9]{7,8}$/;\n\n// qq号\nexport const qq = /^[1-9][0-9]{4,9}$/;\n\n// 身份证号\nexport const cardNumber = /(^\\d{15}$)|(^\\d{17}([0-9]|X|x)$)/;\n\n// 邮箱\nexport const email = /^(\\w-*\\.*)+@(\\w-?)+(\\.\\w{2,})+$/;\n\n// 自然数 = 0 + 正整数\nexport const number = /^[1-9]\\d*$|^0?$/;\n\n// 整数 = 负整数 + 0 + 正整数\nexport const integer = /^[-]?[1-9]\\d*$|^0?$/;\n\n// 正整数 不包含0\nexport const positiveInteger = /^[1-9]\\d*$/;\n\n// 数字、保存两位小数\nexport const numberWithTwoDecimal = /^(0|[1-9]\\d*)(\\.\\d{1,2})?$/;\n","import {getStringByteLength, stringFormat} from './index';\nimport * as regexps from './regexp';\nimport _ from \"lodash\";\n\nexport default {\n    ip(message = '请输入正确的IP地址！') {\n        return {\n            pattern: regexps.ip,\n            message,\n        };\n    },\n    port(message = '请输入正确的端口号！') {\n        return {\n            pattern: regexps.port,\n            message,\n        };\n    },\n    noSpace(message = '不能含有空格！') {\n        return {\n            validator: (rule, value, callback) => {\n                if (/\\s/g.test(value)) return callback(message);\n                return callback();\n            },\n        };\n    },\n\n    mobile(message = '请输入正确的手机号！') { // 手机号\n        return {\n            pattern: regexps.mobile,\n            message,\n        };\n    },\n\n    landline(message = '请输入正确的座机号！') { // 座机\n        return {\n            pattern: regexps.landLine,\n            message,\n        };\n    },\n\n    qq(message = '请输入正确的qq号！') { // qq号\n        return {\n            pattern: regexps.qq,\n            message,\n        };\n    },\n\n    cardNumber(message = '请输入正确的身份证号！') { // 身份证号十五位十八位最后X的校验\n        return {\n            pattern: regexps.cardNumber,\n            message,\n        };\n    },\n\n    email(message = '请输入正确的邮箱！') {\n        return {\n            type: 'email',\n            message,\n        };\n    },\n\n    number(message = '请输入数字.') { // 纯数字，不包括 + -\n        return {\n            pattern: regexps.number,\n            message,\n        };\n    },\n    integer(message = '请输入整数！') { // 整数\n        return {\n            pattern: regexps.integer,\n            message,\n        };\n    },\n    positiveInteger(message = '请输入正整数！') { // 正整数 = 不按包含0\n        return {\n            pattern: regexps.positiveInteger,\n            message,\n        };\n    },\n    numberWithTwoDecimal(message = '请输入数字，保存两位小数.') {\n        return {\n            pattern: regexps.numberWithTwoDecimal,\n            message,\n        };\n    },\n    numberRange(min, max, message = '请输入{min}到{max}之间的值.') {\n        return {\n            validator(rule, value, callback) {\n                if (!value) return callback();\n\n                value = Number(value);\n\n                if (!value && value !== 0) return callback();\n\n                (value < min || value > max) ? callback(stringFormat(message, {min, max})) : callback();\n            },\n        };\n    },\n    numberMaxRange(max, message = '不能大于{max}') {\n        return {\n            validator(rule, value, callback) {\n                if (!value) return callback();\n\n                value = Number(value);\n\n                if (!value && value !== 0) return callback();\n\n                value > max ? callback(stringFormat(message, {max})) : callback();\n            },\n        };\n    },\n    numberMinRange(min, message = '不能小于{min}') {\n        return {\n            validator(rule, value, callback) {\n                if (!value) return callback();\n\n                value = Number(value);\n\n                if (!value && value !== 0) return callback();\n\n                value < min ? callback(stringFormat(message, {min})) : callback();\n            },\n        };\n    },\n\n    stringByteRangeLength(min, max, message = '请输入 {min}-{max} 个字符(汉字算2个字符).') {\n        return {\n            validator(rule, value, callback) {\n                if (!value) return callback();\n\n                let length = getStringByteLength(value);\n                (length < min || length > max) ? callback(stringFormat(message, {min, max})) : callback();\n            },\n        };\n    },\n    stringByteMinLength(min, message = '最少输入{min}个字符(汉字算2个字符).') {\n        return {\n            validator(rule, value, callback) {\n                if (!value) return callback();\n                let length = getStringByteLength(value);\n                length < min ? callback(stringFormat(message, {min})) : callback();\n            },\n        };\n    },\n    stringByteMaxLength(max, message = '最多输入{max}个字符(汉字算2个字符).') {\n        return {\n            validator(rule, value, callback) {\n                if (!value) return callback();\n                let length = getStringByteLength(value);\n                length > max ? callback(stringFormat(message, {max})) : callback();\n            },\n        };\n    },\n\n    arrayMaxLength(max, message = '最多{max}个值') {\n        return {\n            validator(rule, value, callback) {\n                if (!value || !Array.isArray(value)) return callback();\n                let length = value.length;\n                length > max ? callback(stringFormat(message, {max})) : callback();\n            },\n        };\n    },\n\n    // 截流校验写法，如果同一个页面多次使用，必须使用不同的key进行区分\n    userNameExist(key = '_userNameExit', prevValue, message = '用户名重复') {\n        if (!this[key]) this[key] = _.debounce((rule, value, callback) => {\n            if (!value) return callback();\n\n            if (prevValue && value === prevValue) return callback();\n            console.log('发请求');\n            if (value === '1') return callback(message);\n\n            callback();\n        }, 500);\n        return {\n            validator: this[key]\n        }\n    },\n};\n","import React, {Component} from 'react';\nimport {Form} from 'antd';\nimport {FormElement} from '@/library/components';\nimport config from '@/commons/config-hoc';\nimport validator from '@/library/utils/validation-rule';\nimport {ModalContent} from '@/library/components';\n\n@config({\n    ajax: true,\n    modal: {\n        title: props => props.isEdit ? '修改用户' : '添加用户',\n    },\n})\n@Form.create()\nexport default class EditModal extends Component {\n    state = {\n        loading: false, // 页面加载loading\n        data: {},       // 表单回显数据\n    };\n\n    componentDidMount() {\n        const {isEdit} = this.props;\n\n        if (isEdit) {\n            this.fetchData();\n        }\n    }\n\n    fetchData = () => {\n        if (this.state.loading) return;\n\n        const {id} = this.props;\n\n        this.setState({loading: true});\n        this.props.ajax.get(`/mock/users/${id}`)\n            .then(res => {\n                this.setState({data: res || {}});\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleSubmit = () => {\n        if (this.state.loading) return;\n\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (err) return;\n\n            const {isEdit} = this.props;\n            const ajaxMethod = isEdit ? this.props.ajax.put : this.props.ajax.post;\n            const successTip = isEdit ? '修改成功！' : '添加成功！';\n\n            console.log(isEdit);\n\n            this.setState({loading: true});\n            ajaxMethod('/mock/users', values, {successTip})\n                .then(() => {\n                    const {onOk} = this.props;\n                    onOk && onOk();\n                })\n                .finally(() => this.setState({loading: false}));\n        });\n    };\n\n    render() {\n        const {isEdit, form} = this.props;\n        const {loading, data} = this.state;\n        const formProps = {\n            labelWidth: 100,\n            form,\n        };\n        return (\n            <ModalContent\n                loading={loading}\n                okText=\"保存\"\n                cancelText=\"重置\"\n                onOk={this.handleSubmit}\n                onCancel={() => form.resetFields()}\n            >\n                <Form onSubmit={this.handleSubmit}>\n                    {isEdit ? <FormElement {...formProps} type=\"hidden\" field=\"id\" initialValue={data.id}/> : null}\n                    <FormElement\n                        {...formProps}\n                        label=\"用户名\"\n                        field=\"name\"\n                        initialValue={data.name}\n                        required\n                        noSpace\n                        rules={[\n                            validator.userNameExist(),\n                        ]}\n                    />\n                    <FormElement\n                        {...formProps}\n                        type=\"number\"\n                        label=\"年龄\"\n                        field=\"age\"\n                        initialValue={data.age}\n                        required\n                    />\n                    <FormElement\n                        {...formProps}\n                        type=\"select\"\n                        label=\"工作\"\n                        field=\"job\"\n                        initialValue={data.job}\n                        options={[\n                            {value: '1', label: '前端开发'},\n                            {value: '2', label: '后端开发'},\n                        ]}\n                    />\n                    <FormElement\n                        {...formProps}\n                        type=\"select\"\n                        label=\"职位\"\n                        field=\"position\"\n                        initialValue={data.position}\n                        options={[\n                            {value: '1', label: '员工'},\n                            {value: '2', label: 'CEO'},\n                        ]}\n                    />\n                </Form>\n            </ModalContent>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport {Button, Form, Modal} from 'antd';\nimport PageContent from '@/layouts/page-content';\nimport config from '@/commons/config-hoc';\nimport {\n    QueryBar,\n    FormRow,\n    FormElement,\n    ToolBar,\n    Table,\n    Operator,\n    Pagination,\n} from '@/library/components';\nimport EditModal from './EditModal';\n\n@config({\n    path: '/users',\n    ajax: true,\n})\n@Form.create()\nexport default class UserCenter extends Component {\n    state = {\n        loading: false,     // 表格加载数据loading\n        dataSource: [],     // 表格数据\n        selectedRowKeys: [],// 表格中选中行keys\n        total: 0,           // 分页中条数\n        pageNum: 1,         // 分页当前页\n        pageSize: 10,       // 分页每页显示条数\n        deleting: false,    // 批量删除中loading\n        singleDeleting: {}, // 操作列删除loading\n        visible: false,     // 添加、修改弹框\n        id: null,           // 需要修改的数据id\n    };\n\n    columns = [\n        {title: '用户名', dataIndex: 'name', width: 200},\n        {title: '年龄', dataIndex: 'age', width: 200},\n        {title: '工作', dataIndex: 'job', width: 200},\n        {title: '职位', dataIndex: 'position', width: 200},\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (value, record) => {\n                const {id, name} = record;\n                const {singleDeleting} = this.state;\n                const deleting = singleDeleting[id];\n                const items = [\n                    {\n                        label: '编辑',\n                        onClick: () => this.setState({visible: true, id}),\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        loading: deleting,\n                        confirm: {\n                            title: `您确定删除\"${name}\"?`,\n                            onConfirm: () => this.handleDelete(id),\n                        },\n                    },\n                ];\n\n                return <Operator items={items}/>\n            },\n        },\n    ];\n\n    componentDidMount() {\n        this.handleSearch();\n    }\n\n    handleSearch = (e) => {\n        e && e.preventDefault();\n        if (this.state.loading) return;\n\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (err) return;\n\n            const {pageNum, pageSize} = this.state;\n            const params = {\n                ...values,\n                pageNum,\n                pageSize,\n            };\n\n            this.setState({loading: true});\n            this.props.ajax.get('/mock/users', params)\n                .then(res => {\n                    const dataSource = res?.list || [];\n                    const total = res?.total || 0;\n\n                    this.setState({dataSource, total});\n                })\n                .finally(() => this.setState({loading: false}));\n        });\n    };\n\n    handleDelete = (id) => {\n        const singleDeleting = {...this.state.singleDeleting};\n\n        if (singleDeleting[id]) return;\n\n        singleDeleting[id] = true;\n        this.setState({singleDeleting});\n        this.props.ajax.del(`/mock/users/${id}`, null, {successTip: '删除成功！', errorTip: '删除失败！'})\n            .then(() => this.handleSearch())\n            .finally(() => {\n                singleDeleting[id] = false;\n                this.setState({singleDeleting});\n            });\n    };\n\n    handleBatchDelete = () => {\n        if (this.state.deleting) return;\n\n        const {selectedRowKeys} = this.state;\n        const content = (\n            <span>\n                您确定删除\n                <span style={{padding: '0 5px', color: 'red', fontSize: 18}}>\n                    {selectedRowKeys.length}\n                </span>\n                条记录吗？\n            </span>\n        );\n        Modal.confirm({\n            title: '温馨提示',\n            content,\n            onOk: () => {\n                this.setState({deleting: true});\n                this.props.ajax.del('/mock/users', {ids: selectedRowKeys}, {successTip: '删除成功！', errorTip: '删除失败！'})\n                    .then(() => this.handleSearch())\n                    .finally(() => this.setState({deleting: false}));\n            },\n        })\n    };\n\n    render() {\n        const {\n            loading,\n            deleting,\n            dataSource,\n            selectedRowKeys,\n            total,\n            pageNum,\n            pageSize,\n            visible,\n            id,\n        } = this.state;\n\n        const {form} = this.props;\n        const formProps = {\n            form,\n            width: 300,\n            style: {paddingLeft: 16},\n        };\n        const disabledDelete = !selectedRowKeys?.length;\n        return (\n            <PageContent>\n                <QueryBar>\n                    <Form onSubmit={this.handleSearch}>\n                        <FormRow>\n                            <FormElement\n                                {...formProps}\n                                label=\"名称\"\n                                field=\"name\"\n                            />\n                            <FormElement\n                                {...formProps}\n                                type=\"select\"\n                                label=\"职位\"\n                                field=\"job\"\n                                options={[\n                                    {value: 1, label: 1},\n                                    {value: 2, label: 2},\n                                ]}\n                            />\n                            <FormElement layout width=\"auto\">\n                                <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                                <Button onClick={() => form.resetFields()}>重置</Button>\n                            </FormElement>\n                        </FormRow>\n                    </Form>\n                </QueryBar>\n\n                <ToolBar\n                    items={[\n                        {\n                            type: 'primary',\n                            icon: 'plus',\n                            text: '添加',\n                            onClick: () => this.setState({visible: true, id: null}),\n                        },\n                        {\n                            type: 'danger',\n                            icon: 'delete',\n                            text: '删除',\n                            loading: deleting,\n                            disabled: disabledDelete,\n                            onClick: this.handleBatchDelete,\n                        },\n                    ]}\n                />\n\n                <Table\n                    rowSelection={{\n                        selectedRowKeys,\n                        onChange: selectedRowKeys => this.setState({selectedRowKeys}),\n                    }}\n                    loading={loading}\n                    columns={this.columns}\n                    dataSource={dataSource}\n                    rowKey=\"id\"\n                    pagination={false}\n                />\n\n                <Pagination\n                    total={total}\n                    pageNum={pageNum}\n                    pageSize={pageSize}\n                    onPageNumChange={pageNum => this.setState({pageNum}, this.handleSearch)}\n                    onPageSizeChange={pageSize => this.setState({pageSize, pageNum: 1}, this.handleSearch)}\n                />\n                <EditModal\n                    visible={visible}\n                    id={id}\n                    isEdit={id !== null}\n                    onOk={() => this.setState({visible: false}, this.handleSearch)}\n                    onCancel={() => this.setState({visible: false})}\n                />\n            </PageContent>\n        );\n    }\n}\n"],"sourceRoot":""}