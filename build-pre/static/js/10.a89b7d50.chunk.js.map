{"version":3,"sources":["pages/menu-permission/EditModal.jsx","pages/menu-permission/index.jsx"],"names":["EditModal","modal","width","title","props","_props$data","data","key","type","config","ajax","es_form","create","state","loading","iconVisible","handleOk","e","preventDefault","_this","form","validateFieldsAndScroll","err","values","console","log","put","post","onOk","setState","then","visible","finally","handleReset","resetFields","handleCancel","onCancel","_this$props","this","isMenu","getFieldValue","formElementProps","labelWidth","react_default","a","createElement","components","surplusSpace","footer","react","es_button","onClick","style","padding","Object","assign","field","initialValue","parentKey","row","col","span","label","text","required","icon","code","labelTip","path","order","min","step","url","target","options","value","Component","index","menus","record","columns","dataIndex","render","es_icon","items","color","confirm","onConfirm","handleDeleteNode","handleAddTopMenu","del","concat","handleSearch","_this2","localMenus","orderedData","toConsumableArray","sort","b","aOrder","bOrder","menuTreeData","convertToTree","_this3","_this$state","page_content","className","dataSource","pagination","EditModal_EditModal"],"mappings":"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","file":"static/js/10.a89b7d50.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Button, Col, Form, Row} from \"antd\";\nimport {FormElement, IconPicker, modal, ModalContent} from '@/library/components';\nimport config from '@/commons/config-hoc';\n\n@modal({\n    width: 700,\n    title: props => {\n        const {data = {}} = props;\n        const {key, type} = data;\n        const isMenu = type === '1';\n\n        if (isMenu) return key ? '编辑菜单' : '添加菜单';\n\n        return key ? '编辑功能' : '添加功能';\n    },\n})\n@config({ajax: true})\n@Form.create()\nexport default class EditModal extends Component {\n    state = {\n        loading: false,\n        iconVisible: false,\n    };\n\n    componentDidMount() {\n\n    }\n\n    handleOk = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n\n                // 如果key存在视为修改，其他为添加\n                const {key} = values;\n                const ajax = key ? this.props.ajax.put : this.props.ajax.post;\n                const {onOk} = this.props;\n\n                // TODO\n                this.setState({loading: true});\n                ajax('/menus', values)\n                    .then(() => {\n                        this.setState({visible: false});\n                        onOk && onOk();\n                    })\n                    .finally(() => this.setState({loading: false}));\n            }\n        });\n    };\n\n    handleReset = () => {\n        this.props.form.resetFields();\n    };\n\n    handleCancel = () => {\n        const {onCancel} = this.props;\n        if (onCancel) onCancel();\n    };\n\n    render() {\n        const {form, data} = this.props;\n        const {loading} = this.state;\n        const initialType = '1';\n        const type = form.getFieldValue('type') || data.type || initialType;\n\n        const isMenu = type === '1';\n\n        const formElementProps = {\n            form,\n            labelWidth: 70,\n        };\n        return (\n            <ModalContent\n                surplusSpace={false}\n                loading={loading}\n                footer={\n                    <Fragment>\n                        <Button onClick={this.handleOk} type=\"primary\">保存</Button>\n                        <Button onClick={this.handleReset}>重置</Button>\n                        <Button onClick={this.handleCancel}>取消</Button>\n                    </Fragment>\n                }\n            >\n                <Form style={{padding: 16}}>\n                    <FormElement {...formElementProps} type=\"hidden\" field=\"key\" initialValue={data.key}/>\n                    <FormElement {...formElementProps} type=\"hidden\" field=\"parentKey\" initialValue={data.parentKey}/>\n                    <FormElement {...formElementProps} type=\"hidden\" field=\"type\" initialValue={data.type || initialType}/>\n                    <Row>\n                        <Col span={12}>\n                            <FormElement\n                                {...formElementProps}\n                                label=\"名称\"\n                                field=\"text\"\n                                initialValue={data.text}\n                                required\n                            />\n                        </Col>\n                        {isMenu ? (\n                            <Col span={12}>\n                                <FormElement\n                                    {...formElementProps}\n                                    label=\"图标\"\n                                    field=\"icon\"\n                                    initialValue={data.icon}\n                                >\n                                    <IconPicker/>\n                                </FormElement>\n                            </Col>\n                        ) : (\n                            <Col span={12}>\n                                <FormElement\n                                    {...formElementProps}\n                                    label=\"编码\"\n                                    field=\"code\"\n                                    required\n                                    initialValue={data.code}\n                                    labelTip=\"唯一标识，硬编码，前端一般会用于控制按钮是否显示。\"\n                                />\n                            </Col>\n                        )}\n                    </Row>\n                    <Row>\n                        <Col span={12}>\n                            <FormElement\n                                {...formElementProps}\n                                label=\"path\"\n                                field=\"path\"\n                                initialValue={data.path}\n                                labelTip=\"菜单对应的页面地址，或者功能对应的页面地址。前端会基于用户所拥有的path，对路由进行过滤。\"\n                            />\n                        </Col>\n                        {isMenu ? (\n                            <Col span={12}>\n                                <FormElement\n                                    {...formElementProps}\n                                    label=\"排序\"\n                                    type=\"number\"\n                                    field=\"order\"\n                                    initialValue={data.order}\n                                    min={0}\n                                    step={1}\n                                />\n                            </Col>\n                        ) : null}\n                    </Row>\n                    {isMenu ? (\n                        <Row>\n                            <Col span={12}>\n                                <FormElement\n                                    {...formElementProps}\n                                    label=\"url\"\n                                    field=\"url\"\n                                    initialValue={data.url}\n                                />\n                            </Col>\n                            <Col span={12}>\n                                <FormElement\n                                    {...formElementProps}\n                                    type=\"select\"\n                                    label=\"target\"\n                                    field=\"target\"\n                                    initialValue={data.target}\n                                    options={[\n                                        {value: '', label: '项目内部窗口'},\n                                        {value: '_self', label: '替换当前窗口'},\n                                        {value: '_blank', label: '打开新窗口'},\n                                    ]}\n                                />\n                            </Col>\n                        </Row>\n                    ) : null}\n                </Form>\n            </ModalContent>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Icon, Form} from 'antd';\nimport config from '@/commons/config-hoc';\nimport PageContent from '@/layouts/page-content';\nimport localMenus from '../../menus';\nimport {convertToTree} from \"@/library/utils/tree-utils\";\nimport {Table, ToolBar, Operator} from '@/library/components';\nimport EditModal from './EditModal';\nimport './style.less';\n\n@config({\n    path: '/menu-permission',\n    title: {text: '菜单&权限', icon: 'lock'},\n    ajax: true,\n})\n@Form.create()\nexport default class index extends Component {\n    state = {\n        loading: false,\n        menus: [],\n        visible: false,\n        record: {},\n        iconVisible: false,\n    };\n\n    columns = [\n        {\n            title: '名称', dataIndex: 'text', key: 'text', width: 300,\n            render: (value, record) => {\n                const {icon} = record;\n\n                if (icon) return <span><Icon type={icon}/> {value}</span>;\n\n                return value;\n            }\n        },\n        {title: 'path', dataIndex: 'path', key: 'path', width: 250},\n        {title: 'url', dataIndex: 'url', key: 'url'},\n        {title: 'target', dataIndex: 'target', key: 'target', width: 60},\n        {\n            title: '类型', dataIndex: 'type', key: 'type', width: 60,\n            render: value => {\n                if (value === '1') return '菜单';\n                if (value === '2') return '功能';\n\n                return '菜单';\n            }\n        },\n        {title: '功能编码', dataIndex: 'code', key: 'code', width: 100},\n        {title: '排序', dataIndex: 'order', key: 'order', width: 60},\n        {\n            title: '操作', dataIndex: 'operator', key: 'operator', width: 150,\n            render: (value, record) => {\n                const items = [\n                    {\n                        label: '编辑',\n                        icon: 'form',\n                        onClick: () => this.setState({data: record, visible: true}),\n                    },\n                    {\n                        label: '删除',\n                        icon: 'delete',\n                        color: 'red',\n                        confirm: {\n                            title: '您请确定要删除此节点及其子节点吗？',\n                            onConfirm: () => this.handleDeleteNode(record),\n                        }\n                    },\n                    {\n                        label: '添加子菜单',\n                        icon: 'folder-add',\n                        onClick: () => this.setState({data: {parentKey: record.key, type: '1'}, visible: true}),\n                    },\n                    {\n                        label: '添加子功能',\n                        icon: 'file-add',\n                        onClick: () => this.setState({data: {parentKey: record.key, type: '2'}, visible: true}),\n                    },\n                ];\n                return <Operator items={items}/>\n            },\n        },\n    ];\n\n    componentDidMount() {\n        this.handleSearch();\n    }\n\n    handleSearch() {\n        localMenus().then(menus => {\n            // 菜单根据order 排序\n            const orderedData = [...menus].sort((a, b) => {\n                const aOrder = a.order || 0;\n                const bOrder = b.order || 0;\n\n                // 如果order都不存在，根据 text 排序\n                if (!aOrder && !bOrder) {\n                    return a.text > b.text ? 1 : -1;\n                }\n\n                return bOrder - aOrder;\n            });\n\n            const menuTreeData = convertToTree(orderedData);\n\n            this.setState({menus: menuTreeData});\n        });\n        /*\n        // TODO 获取所有的菜单，不区分用户\n        this.setState({loading: true});\n        this.props.ajax\n            .get('/menus')\n            .then(res => {\n                this.setState({menus: res});\n            })\n            .finally(() => this.setState({loading: false}));\n        */\n    }\n\n    handleAddTopMenu = () => {\n        this.setState({data: {type: '1'}, visible: true});\n    };\n\n    handleDeleteNode = (record) => {\n        const {key} = record;\n\n        // TODO\n        this.setState({loading: true});\n        this.props.ajax\n            .del(`/menus/${key}`)\n            .then(() => {\n                this.setState({visible: false});\n                this.handleSearch();\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    render() {\n        const {\n            menus,\n            visible,\n            loading,\n            data,\n        } = this.state;\n\n        return (\n            <PageContent styleName=\"root\">\n                <ToolBar items={[\n                    {type: 'primary', text: '添加顶级', icon: 'plus', onClick: this.handleAddTopMenu},\n                ]}/>\n                <Table\n                    loading={loading}\n                    columns={this.columns}\n                    dataSource={menus}\n                    pagination={false}\n                />\n                <EditModal\n                    visible={visible}\n                    data={data}\n                    onOk={() => this.setState({visible: false}, this.handleSearch)}\n                    onCancel={() => this.setState({visible: false})}\n                />\n            </PageContent>\n        );\n    }\n}\n\n"],"sourceRoot":""}