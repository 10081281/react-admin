{"version":3,"sources":["pages/gen/style.less","../node_modules/antd/es/tabs/style/index.js","../delegated 343 from dll-reference reactVendor_3c18f74ec8de686750db","../delegated 402 from dll-reference reactVendor_3c18f74ec8de686750db","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../delegated 2737 from dll-reference reactVendor_3c18f74ec8de686750db","pages/gen/util.js","pages/gen/Fast.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/gen/Single.jsx","pages/gen/index.jsx"],"names":["module","exports","__webpack_require__","getLabel","str","endsWith","length","slice","getFormElementType","oType","label","type","startsWith","includes","getTables","res","tables","ignoreFields","selectedRowKeys","dataSource","map","tableName","name","comment","columns","id","push","queryCount","isTable","listPage","query","selectable","pagination","serialNumber","add","operatorEdit","operatorDelete","batchDelete","modalEdit","pageEdit","children","it","camelCaseName","isNullable","chinese","isIgnore","isQuery","formType","field","trim","isColumn","isForm","renderTags","record","onClick","configMap","Object","entries","key","value","enabled","split","color","nextEnabled","keys","forEach","k","renderFieldTags","labelMap","val","EditTable","tableEditable","Table","renderContent","obj","props","colSpan","Fast","config","ajax","state","loading","title","dataIndex","width","style","paddingLeft","formProps","index","required","tabIndex","onBlur","e","target","render","tags","setState","textAlign","align","handleSubmit","values","get","baseURL","then","finally","handleDbUrlChange","dbUrl","window","localStorage","setItem","handleGen","confirm","icon","content","onOk","params","filter","item","post","successTip","console","log","getItem","this","form","setFieldsValue","submit","padding","margin","ref","onFinish","placeholder","onChange","htmlType","rowSelection","renderCell","checked","originNode","rowKey","Component","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","tableRowDraggable","UserCenter","total","pageNum","pageSize","deleting","table","onFocus","handleFocus","onKeyDown","handleKeyDown","showSearch","options","items","onConfirm","handleDelete","select","keyCode","ctrlKey","shiftKey","altKey","metaKey","nextTabIndex","isRight","isDown","isEnter","nextInput","document","querySelector","setTimeout","focus","handleAdd","ti","handleTypeChange","handleModuleNameChange","handleSwaggerChange","getFieldValue","handleTableNameChange","swaggerUrl","method","userName","password","moduleName","queries","forms","uuid","find","append","newRecord","unshift","a","validateFields","isInputLikeElement","catch","handleSortEnd","newIndex","oldIndex","splice","initialValues","Item","marginBottom","shouldUpdate","prevValues","currValues","elementStyle","rules","message","layout","display","justifyContent","marginRight","paddingRight","paddingTop","onSortEnd","TabPane","path","defaultActiveKey","tab"],"mappings":"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","file":"static/js/3.66147f5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"root-1NzB1\",\"tag\":\"tag-2KkJc\"};","import '../../style/index.less';\nimport './index.less';","module.exports = (__webpack_require__(6))(343);","module.exports = (__webpack_require__(6))(402);","module.exports = require(\"regenerator-runtime\");\n","module.exports = (__webpack_require__(6))(2737);","import React from 'react';\nimport {Tag} from 'antd';\nimport './style.less';\n\nexport const DB_URL_STORE_KEY = 'GEN_DB_URL';\nexport const SWAGGER_URL_STORE_KEY = 'GEN_SWAGGER_URL';\n\nexport function getLabel(str) {\n    if (!str) return '未定义';\n\n    if ((str.endsWith('id') || str.endsWith('Id')) && str.length > 2) return str.slice(0, -2);\n\n    return str;\n}\n\nexport function getFormElementType({oType = 'string', label = ''}) {\n    let type = 'input';\n\n    // FIXME 完善更多类型\n    if (oType === 'array') type = 'select';\n\n    if (label.startsWith('是否')) type = 'switch';\n\n    if (label.startsWith('密码') || label.endsWith('密码')) type = 'password';\n\n    if (label.includes('电话') || label.includes('手机')) type = 'mobile';\n\n    if (label.includes('邮箱')) type = 'email';\n\n    if (label.includes('时间') || label.includes('日期')) type = 'date';\n\n    if (label.includes('描述') || label.includes('备注') || label.includes('详情')) type = 'textarea';\n\n    return type;\n}\n\nexport function getTables(res) {\n    const tables = res.tables || {};\n    const ignoreFields = res.ignoreFields || [];\n    const selectedRowKeys = [];\n\n    const dataSource = tables.map(({name: tableName, comment, columns}) => {\n        const id = tableName;\n        selectedRowKeys.push(id);\n        let queryCount = 0;\n        return {\n            id,\n            isTable: true,\n            tableName,\n            comment,\n            listPage: true,\n            query: true,\n            selectable: true,\n            pagination: true,\n            serialNumber: true,\n            add: true,\n            operatorEdit: true,\n            operatorDelete: true,\n            batchDelete: true,\n\n            modalEdit: true,\n            pageEdit: false,\n            children: columns.map(it => {\n                const {camelCaseName, name, type, isNullable, comment, chinese, length} = it;\n                const id = `${tableName}-${name}`;\n                selectedRowKeys.push(id);\n\n                const isIgnore = ignoreFields.includes(name);\n\n                // 初始化时 默认选中两个作为条件\n                let isQuery = !isIgnore;\n                if (isQuery) queryCount++;\n                if (queryCount > 2) isQuery = false;\n\n                const formType = getFormElementType({oType: type, label: chinese});\n\n                return {\n                    id,\n                    tableName,\n                    field: camelCaseName,\n                    comment: comment,\n                    chinese: (chinese || camelCaseName).trim(),\n                    name,\n                    length,\n                    type,\n                    formType,\n                    isNullable,\n                    isColumn: !isIgnore,\n                    isQuery,\n                    isForm: !isIgnore,\n                    isIgnore,\n                };\n            }),\n        };\n    });\n\n    return {dataSource, selectedRowKeys};\n}\n\nexport function renderTags(record, onClick = () => undefined) {\n    const configMap = {\n        listPage: '列表页 orange',\n        query: '查询条件 gold',\n        selectable: '可选中 lime',\n        pagination: '分页 green',\n        serialNumber: '序号 cyan',\n        add: '添加 blue',\n        operatorEdit: '编辑 geekblue',\n        operatorDelete: '删除 red',\n        batchDelete: '批量删除 red',\n        modalEdit: '弹框编辑 purple',\n        pageEdit: '页面编辑 purple',\n    };\n\n    return Object.entries(configMap).map(([key, value]) => {\n        const enabled = record[key];\n        let [label, color] = value.split(' ');\n        if (!enabled) color = '#ccc';\n\n        return (\n            <Tag\n                key={label}\n                color={color}\n                styleName=\"tag\"\n                onClick={() => {\n                    let nextEnabled = !record[key];\n                    if (key === 'listPage') {\n                        Object.keys(configMap).forEach(k => {\n                            if (k !== 'modalEdit' && k !== 'pageEdit') {\n                                record[k] = nextEnabled;\n                            }\n                        });\n\n                    } else if (key === 'modalEdit' && nextEnabled) {\n                        record.modalEdit = true;\n                        record.pageEdit = false;\n                    } else if (key === 'pageEdit' && nextEnabled) {\n                        record.pageEdit = true;\n                        record.modalEdit = false;\n                    } else {\n                        record[key] = nextEnabled;\n                        if (key !== 'modalEdit' && key !== 'pageEdit' && nextEnabled) {\n                            record.listPage = true;\n                        }\n                    }\n                    onClick(key);\n                }}\n            >\n                {label}\n            </Tag>\n        );\n\n    });\n}\n\nexport function renderFieldTags(record, onClick = () => undefined) {\n    const {isColumn, isForm, isQuery} = record;\n    const labelMap = {\n        isColumn: '表格 orange',\n        isQuery: '条件 green',\n        isForm: '表单 purple',\n    };\n    return Object.entries({isColumn, isQuery, isForm}).map(([key, val]) => {\n        const [label, color] = labelMap[key].split(' ');\n\n        return (\n            <Tag\n                key={key}\n                color={val ? color : '#ccc'}\n                styleName=\"tag\"\n                onClick={() => {\n                    record[key] = !record[key];\n                    onClick(key);\n                }}\n            >\n                {label}\n            </Tag>\n        );\n    });\n}\n","import React, {Component} from 'react';\nimport {Form, Button, Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport {FormElement, FormRow, Table, tableEditable} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport PageContent from 'src/layouts/page-content';\nimport {\n    DB_URL_STORE_KEY,\n    renderTags,\n    renderFieldTags,\n    getTables,\n    getLabel,\n} from './util';\nimport './style.less';\n\nconst EditTable = tableEditable(Table);\n\nconst renderContent = (value, record) => {\n    const obj = {\n        children: value,\n        props: {},\n    };\n    if (record.isTable) {\n        obj.props.colSpan = 0;\n    }\n    return obj;\n};\n\n@config({ajax: true})\nexport default class Fast extends Component {\n    state = {\n        loading: false,\n        selectedRowKeys: [],\n        dataSource: [],\n    };\n\n    columns = [\n        {title: '表名', dataIndex: 'tableName', width: 200},\n        {title: '数据库注释', dataIndex: 'comment', width: 200},\n        {\n            title: <span style={{paddingLeft: 10}}>中文名</span>, dataIndex: 'chinese', width: 250,\n            formProps: (record, index) => {\n                return {\n                    required: true,\n                    tabIndex: index + 1, // index * 2 + 1\n                    onBlur: (e) => {\n                        record.chinese = e.target.value;\n                    },\n                };\n            },\n            render: renderContent,\n        },\n        {\n            title: <span style={{paddingLeft: 10}}>列名</span>, dataIndex: 'field',\n            formProps: (record, index) => {\n                if (record.isTable) return null;\n\n                return {\n                    required: true,\n                    tabIndex: index + 100, // index * 2 + 2\n                    onBlur: (e) => {\n                        record.field = e.target.value;\n                    },\n                };\n            },\n            render: (value, record) => {\n                if (record.isTable) {\n                    const tags = renderTags(record, () => this.setState({dataSource: [...this.state.dataSource]}));\n                    return {\n                        children: <div style={{textAlign: 'right'}}>{tags}</div>,\n                        props: {\n                            colSpan: 3,\n                        },\n                    };\n                }\n                return value;\n            },\n        },\n        {\n            title: '选项', dataIndex: 'options', width: 160, align: 'right',\n            render: (value, record) => {\n                const children = renderFieldTags(record, () => this.setState({dataSource: [...this.state.dataSource]}));\n                return {\n                    children,\n                    props: {colSpan: record.isTable ? 0 : 1},\n                };\n            },\n        },\n        // {title: '是否为空', dataIndex: 'nullable'},\n    ];\n\n    componentDidMount() {\n        const dbUrl = window.localStorage.getItem(DB_URL_STORE_KEY) || '';\n        if (dbUrl) {\n            this.form.setFieldsValue({dbUrl});\n            // 初始化查询\n            this.form.submit();\n        }\n    }\n\n    handleSubmit = (values) => {\n        this.setState({loading: true});\n        this.props.ajax.get('/gen/tables', values, {baseURL: '/'})\n            .then(res => {\n                const {dataSource, selectedRowKeys} = getTables(res);\n\n                this.setState({dataSource, selectedRowKeys});\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleDbUrlChange = (e) => {\n        const dbUrl = e.target.value;\n\n        // 进行本地存储，记录数据库地址，使用原生存储，不区分用户\n        window.localStorage.setItem(DB_URL_STORE_KEY, dbUrl || '');\n    };\n\n    handleGen = () => {\n        Modal.confirm({\n            icon: <ExclamationCircleOutlined/>,\n            title: '同名文件将被覆盖，是否继续？',\n            content: '代码文件直接生成到项目目录中，会引起webpack的热更新，当前页面有可能会重新加载。',\n            onOk: () => {\n                const {selectedRowKeys, dataSource} = this.state;\n                const tables = dataSource.filter(item => selectedRowKeys.includes(item.id));\n                const result = tables.map(item => {\n                    const children = item.children\n                        .map(it => ({\n                            field: it.field,\n                            chinese: getLabel(it.chinese),\n                            name: it.name,\n                            type: it.type,\n                            length: it.length,\n                            isNullable: it.isNullable,\n                            isForm: it.isForm,\n                            isColumn: it.isColumn,\n                            isQuery: it.isQuery,\n                        }));\n\n                    return {\n                        ...item,\n                        children,\n                    };\n                });\n                const params = {\n                    tables: result,\n                };\n                this.setState({loading: true});\n                this.props.ajax.post('/gen/tables', params, {baseURL: '/', successTip: '生成成功！'})\n                    .then(res => {\n                        console.log(res);\n                    })\n                    .finally(() => this.setState({loading: false}));\n            },\n        });\n    };\n\n    render() {\n        const {dataSource, selectedRowKeys, loading} = this.state;\n\n        const formProps = {\n            width: '50%',\n        };\n        return (\n            <PageContent style={{padding: 0, margin: 0}} loading={loading}>\n                <Form\n                    ref={form => this.form = form}\n                    onFinish={this.handleSubmit}\n                >\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"数据库地址\"\n                            name=\"dbUrl\"\n                            placeholder=\"mysql://username:password@host:port/database\"\n                            required\n                            onChange={this.handleDbUrlChange}\n                        />\n                        <Button style={{margin: '0 8px'}} type=\"primary\" htmlType=\"submit\">获取数据库表</Button>\n                        <Button onClick={this.handleGen}>生成选中表</Button>\n                    </FormRow>\n                </Form>\n                <EditTable\n                    rowSelection={{\n                        selectedRowKeys,\n                        onChange: selectedRowKeys => this.setState({selectedRowKeys}),\n                        renderCell: (checked, record, index, originNode) => record.isTable ? originNode : null,\n                    }}\n                    dataSource={dataSource}\n                    columns={this.columns}\n                    rowKey=\"id\"\n                />\n            </PageContent>\n        );\n    }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, {Component} from 'react';\nimport {Button, Form, Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport {v4 as uuid} from 'uuid';\nimport PageContent from 'src/layouts/page-content';\nimport {isInputLikeElement} from 'src/library/components/form-element';\nimport config from 'src/commons/config-hoc';\nimport {\n    QueryBar,\n    FormRow,\n    FormElement,\n    Table,\n    tableEditable,\n    tableRowDraggable,\n    Operator,\n} from 'src/library/components';\nimport {\n    DB_URL_STORE_KEY,\n    SWAGGER_URL_STORE_KEY,\n    renderTags,\n    renderFieldTags,\n    getTables,\n    getLabel,\n    getFormElementType,\n} from './util';\nimport './style.less';\n\nconst EditTable = tableEditable(tableRowDraggable(Table));\n\n@config({\n    ajax: true,\n})\nexport default class UserCenter extends Component {\n    state = {\n        loading: false,     // 表格加载数据loading\n        total: 0,           // 分页中条数\n        pageNum: 1,         // 分页当前页\n        pageSize: 20,       // 分页每页显示条数\n        deleting: false,    // 删除中loading\n        table: {},          // 当前编辑table\n        tables: [],         // 数据库表\n        ignoreFields: [],   // 忽略字段\n    };\n\n    columns = [\n        {title: '注释', dataIndex: 'comment', width: 200},\n        {\n            title: '中文名', dataIndex: 'chinese', width: 200,\n            formProps: (record, index) => {\n                const tabIndex = index + 1; // index * 2 + 1\n                return {\n                    required: true,\n                    tabIndex,\n                    onFocus: this.handleFocus,\n                    onBlur: (e) => {\n                        record.chinese = e.target.value;\n                    },\n                    onKeyDown: (e) => this.handleKeyDown(e, tabIndex),\n                };\n            },\n        },\n        {\n            title: '列名', dataIndex: 'field',\n            formProps: (record, index) => {\n                if (record.isTable) return null;\n                const {table: {children}} = this.state;\n                const length = children?.length || 0;\n\n                const tabIndex = index + length + 1; // index * 2 + 2;\n                return {\n                    required: true,\n                    tabIndex,\n                    onFocus: this.handleFocus,\n                    onBlur: (e) => {\n                        record.field = e.target.value;\n                    },\n                    onKeyDown: (e) => this.handleKeyDown(e, tabIndex),\n                };\n            },\n        },\n        {\n            title: '表单类型', dataIndex: 'formType',\n            formProps: (record) => {\n                if (record.isTable) return null;\n\n                return {\n                    type: 'select',\n                    showSearch: true,\n                    options: [\n                        {value: 'input', label: '输入框'},\n                        {value: 'hidden', label: '隐藏框'},\n                        {value: 'number', label: '数字框'},\n                        {value: 'textarea', label: '文本框'},\n                        {value: 'password', label: '密码框'},\n                        {value: 'mobile', label: '手机输入框'},\n                        {value: 'email', label: '邮箱输入框'},\n                        {value: 'select', label: '下拉框'},\n                        {value: 'select-tree', label: '下拉树'},\n                        {value: 'checkbox', label: '复选框'},\n                        {value: 'checkbox-group', label: '复选框组'},\n                        {value: 'radio', label: '单选框'},\n                        {value: 'radio-group', label: '单选框组'},\n                        {value: 'radio-button', label: '单选按钮组'},\n                        {value: 'switch', label: '切换按钮'},\n                        {value: 'date', label: '日期选择框'},\n                        {value: 'time', label: '时间选择框'},\n                        {value: 'moth', label: '月份选择框'},\n                        {value: 'date-time', label: '日期+时间选择框'},\n                        {value: 'date-range', label: '日期区间选择框'},\n                        {value: 'cascader', label: '级联下拉框'},\n                        {value: 'transfer', label: '穿梭框'},\n                    ],\n                    onChange: (formType) => {\n                        record.formType = formType;\n                    },\n                };\n            },\n        },\n        {\n            title: '选项', dataIndex: 'operator', width: 170,\n            render: (value, record) => {\n                return renderFieldTags(record, () => this.setState({table: {...this.state.table}}));\n            },\n        },\n        {\n            title: '操作', dataIndex: 'operator', width: 40,\n            render: (value, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${name}\"?`,\n                            onConfirm: () => this.handleDelete(id),\n                        },\n                    },\n                ];\n\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    componentDidMount() {\n        const dbUrl = window.localStorage.getItem(DB_URL_STORE_KEY) || '';\n        const swaggerUrl = window.localStorage.getItem(SWAGGER_URL_STORE_KEY) || '';\n        this.form.setFieldsValue({swaggerUrl});\n\n        if (dbUrl) {\n            this.form.setFieldsValue({dbUrl});\n            // 初始化查询\n            this.handleDbUrlChange();\n        }\n    }\n\n    handleFocus = (e) => {\n        e.target.select();\n    };\n\n    handleKeyDown = (e, tabIndex) => {\n        const {keyCode, ctrlKey, shiftKey, altKey, metaKey} = e;\n\n        if (ctrlKey || shiftKey || altKey || metaKey) return;\n\n        const {table: {children}} = this.state;\n        const length = children?.length || 0;\n\n        const isUp = keyCode === 38;\n        const isRight = keyCode === 39;\n        const isDown = keyCode === 40;\n        const isLeft = keyCode === 37;\n        const isEnter = keyCode === 13;\n\n        let nextTabIndex;\n\n        if (isDown || isEnter) {\n            if (tabIndex === length || tabIndex === length * 2) {\n                nextTabIndex = undefined;\n            } else {\n                nextTabIndex = tabIndex + 1;\n            }\n        }\n\n        if (isUp) nextTabIndex = tabIndex - 1;\n\n        if (isLeft) {\n            if (tabIndex <= length) {\n                nextTabIndex = tabIndex - 1 <= 0 ? undefined : tabIndex - 1 + length;\n            } else {\n                nextTabIndex = tabIndex - length;\n            }\n        }\n\n        if (isRight) {\n            if (tabIndex <= length) {\n                nextTabIndex = tabIndex + length;\n            } else {\n                nextTabIndex = tabIndex - length === length ? undefined : tabIndex - length + 1;\n            }\n        }\n\n        const nextInput = document.querySelector(`input[tabindex='${nextTabIndex}']`);\n\n        if (nextInput) {\n            // 确保方向键也可以选中\n            setTimeout(() => {\n                nextInput.focus();\n                nextInput.select();\n            });\n        } else if (isEnter || isDown || isRight) {\n            // 新增一行\n            this.handleAdd(true);\n\n            // 等待新增行渲染完成，新增行 input 获取焦点\n            setTimeout(() => {\n                let ti = tabIndex;\n\n                if (isRight) ti = tabIndex - length;\n\n                if ((isDown || isEnter) && tabIndex === length * 2) ti = tabIndex + 1;\n\n                this.handleKeyDown({keyCode: 13}, ti);\n            });\n        }\n    };\n\n    handleTypeChange = (e) => {\n        const type = e.target.value;\n        if (type === 'mysql') {\n            this.handleDbUrlChange();\n        }\n        if (type === 'customer') {\n            this.handleModuleNameChange();\n        }\n        if (type === 'swagger') {\n            this.handleSwaggerChange();\n        }\n    };\n\n    handleDbUrlChange = (e) => {\n        const dbUrl = this.form.getFieldValue('dbUrl');\n        window.localStorage.setItem(DB_URL_STORE_KEY, dbUrl || '');\n\n        // 清空数据\n        this.setState({tables: [], table: {}});\n        this.form.setFieldsValue({tableName: undefined});\n\n        if (!dbUrl) return;\n\n        this.setState({loading: true});\n        this.props.ajax.get('/gen/tables', {dbUrl}, {baseURL: '/'})\n            .then(res => {\n                const {dataSource} = getTables(res);\n                this.setState({tables: dataSource}, () => {\n\n                    // 默认选中第一个表\n                    const tableName = dataSource[0]?.tableName;\n\n                    this.form.setFieldsValue({tableName});\n                    this.handleTableNameChange(tableName);\n                });\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleSwaggerChange = () => {\n        const swaggerUrl = this.form.getFieldValue('swaggerUrl');\n        window.localStorage.setItem(SWAGGER_URL_STORE_KEY, swaggerUrl);\n\n        // 清空数据\n        this.setState({tables: [], table: {}});\n        this.form.setFieldsValue({tableName: undefined});\n\n        if (!swaggerUrl) return;\n\n\n        const method = this.form.getFieldValue('method');\n        const userName = this.form.getFieldValue('userName');\n        const password = this.form.getFieldValue('password');\n        const params = {\n            swaggerUrl,\n            method,\n            userName,\n            password,\n        };\n\n        this.setState({loading: true});\n        this.props.ajax.get('/gen/swagger', params, {baseURL: '/'})\n            .then(res => {\n                const {moduleName: tableName, queries, columns, forms} = res;\n\n                const children = [];\n                (queries || []).forEach(item => {\n                    const {type, field, label, required} = item;\n                    const chinese = getLabel(label);\n                    const formType = getFormElementType({oType: type, label: chinese});\n\n                    children.push({\n                        id: uuid(),\n                        tableName,\n                        field,\n                        comment: label,\n                        chinese,\n                        name: field,\n\n                        type,\n                        formType,\n                        length: 0,\n                        isNullable: !required,\n\n                        isColumn: true,\n                        isQuery: true,\n                        isForm: true,\n                        isIgnore: false,\n                    });\n                });\n\n                (columns || []).forEach(item => {\n                    const {title, dataIndex} = item;\n                    if (!children.find(it => it.field === dataIndex)) {\n                        const formType = getFormElementType({oType: 'input', label: title});\n                        children.push(\n                            {\n                                id: uuid(),\n                                tableName,\n                                field: dataIndex,\n                                comment: title,\n                                chinese: getLabel(title),\n                                name: dataIndex,\n\n                                type: 'string',\n                                formType,\n                                length: 0,\n                                isNullable: true,\n\n                                isColumn: true,\n                                isQuery: false,\n                                isForm: true,\n                                isIgnore: false,\n                            },\n                        );\n                    }\n                });\n\n                (forms || []).forEach(item => {\n                    const {type, field, label} = item;\n                    if (!children.find(it => it.field === field)) {\n                        const formType = getFormElementType({oType: type, label: label});\n\n                        children.push({\n                            id: uuid(),\n                            tableName,\n                            field,\n                            comment: label,\n                            chinese: getLabel(label),\n                            name: field,\n\n                            type,\n                            formType,\n                            length: 0,\n                            isNullable: true,\n\n                            isColumn: true,\n                            isQuery: false,\n                            isForm: true,\n                            isIgnore: false,\n                        });\n                    }\n                });\n\n                const table = {\n                    id: tableName,\n                    isTable: true,\n                    tableName,\n                    comment: '',\n                    listPage: true,\n                    query: true,\n                    selectable: true,\n                    pagination: true,\n                    serialNumber: true,\n                    add: true,\n                    operatorEdit: true,\n                    operatorDelete: true,\n                    batchDelete: true,\n\n                    modalEdit: true,\n                    pageEdit: false,\n                    children,\n                };\n\n                this.setState({table});\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleModuleNameChange = () => {\n        // 清空数据\n        this.setState({tables: [], table: {}});\n\n        const moduleName = this.form.getFieldValue('moduleName');\n        if (!moduleName) return;\n\n        const tableName = moduleName;\n        const field = 'name';\n        this.setState({\n            table: {\n                id: tableName,\n                isTable: true,\n                tableName,\n                comment: '',\n                listPage: true,\n                query: true,\n                selectable: true,\n                pagination: true,\n                serialNumber: true,\n                add: true,\n                operatorEdit: true,\n                operatorDelete: true,\n                batchDelete: true,\n\n                modalEdit: true,\n                pageEdit: false,\n                children: [\n                    {\n                        id: uuid(),\n                        tableName,\n                        field,\n                        comment: '用户名',\n                        chinese: '用户名',\n                        name: field,\n\n                        type: 'string',\n                        formType: 'input',\n                        length: 0,\n                        isNullable: true,\n\n                        isColumn: true,\n                        isQuery: true,\n                        isForm: true,\n                        isIgnore: false,\n                    },\n                ],\n            },\n        });\n\n    };\n\n    handleDelete = (id) => {\n        const {table} = this.state;\n        const {children} = table;\n        table.children = children.filter(item => item.id !== id);\n        this.setState({table: {...table}});\n    };\n\n    handleTableNameChange = (tableName) => {\n        const {tables} = this.state;\n        const table = tables.find(item => item.tableName === tableName);\n        this.setState({table});\n    };\n\n    handleAdd = (append) => {\n        const {table} = this.state;\n        if (!table.children) table.children = [];\n        const length = table.children.length;\n        const {tableName, children} = table;\n        const field = `field${length + 1}`;\n        const id = uuid();\n\n        const newRecord = {\n            id,\n            tableName,\n            field,\n            comment: '新增列',\n            chinese: '新增列',\n            name: field,\n\n            type: 'string',\n            formType: 'input',\n            length: 0,\n            isNullable: true,\n\n            isColumn: true,\n            isQuery: false,\n            isForm: true,\n            isIgnore: false,\n        };\n\n        append ? children.push(newRecord) : children.unshift(newRecord);\n        table.children = [...children];\n        this.setState({table: {...table}});\n    };\n\n    handleGen = async () => {\n        this.form.validateFields()\n            .then(() => {\n                if (!this.state.table?.children?.length) {\n                    return Modal.error({\n                        icon: <ExclamationCircleOutlined/>,\n                        title: '温馨提示',\n                        content: '字段配置为空，无法生成，请添加字段信息！',\n                    });\n                }\n\n                Modal.confirm({\n                    icon: <ExclamationCircleOutlined/>,\n                    title: '同名文件将被覆盖，是否继续？',\n                    content: '代码文件直接生成到项目目录中，会引起webpack的热更新，当前页面有可能会重新加载。',\n                    onOk: () => {\n                        const {table} = this.state;\n                        const children = table.children\n                            .map(it => ({\n                                field: it.field,\n                                chinese: getLabel(it.chinese),\n                                name: it.name,\n                                type: it.type,\n                                formType: it.formType || 'input',\n                                length: isInputLikeElement(it.formType || 'input') ? it.length : 0,\n                                isNullable: it.isNullable,\n                                isForm: it.isForm,\n                                isColumn: it.isColumn,\n                                isQuery: it.isQuery,\n                            }));\n\n                        const params = {\n                            tables: [{\n                                ...table,\n                                children,\n                            }],\n                        };\n                        this.setState({loading: true});\n                        this.props.ajax.post('/gen/tables', params, {baseURL: '/', successTip: '生成成功！'})\n                            .finally(() => this.setState({loading: false}));\n                    },\n                });\n            })\n            .catch(console.log);\n    };\n\n    handleSortEnd = ({newIndex, oldIndex}) => {\n        const {table} = this.state;\n        const {children = []} = table;\n\n        children.splice(newIndex, 0, ...children.splice(oldIndex, 1));\n        table.children = [...children];\n\n        this.setState({table: {...table}});\n    };\n\n    render() {\n        const {\n            loading,\n            deleting,\n            tables,\n            table,\n        } = this.state;\n\n        const formProps = {\n            style: {paddingLeft: 16},\n        };\n\n        return (\n            <PageContent loading={loading || deleting} style={{padding: 0, margin: 0}}>\n                <QueryBar>\n                    <Form ref={form => this.form = form} initialValues={{type: 'mysql', method: 'get', userName: 'admin', password: '123456'}}>\n                        <FormRow>\n                            <FormElement\n                                {...formProps}\n                                width={240}\n                                type=\"radio-button\"\n                                name=\"type\"\n                                options={[\n                                    {value: 'swagger', label: 'Swagger'},\n                                    {value: 'mysql', label: 'MySql'},\n                                    {value: 'customer', label: '自定义'},\n                                ]}\n                                onChange={this.handleTypeChange}\n                            />\n                            <Form.Item style={{marginBottom: 0}} shouldUpdate={(prevValues, currValues) => prevValues.type !== currValues.type}>\n                                {({getFieldValue}) => {\n                                    const type = getFieldValue('type');\n                                    if (type === 'mysql') {\n                                        return (\n                                            <FormRow>\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={500}\n                                                    label=\"数据库地址\"\n                                                    name=\"dbUrl\"\n                                                    placeholder=\"mysql://username:password@host:port/database\"\n                                                    onChange={this.handleDbUrlChange}\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    elementStyle={{width: 200}}\n                                                    type=\"select\"\n                                                    showSearch\n                                                    label=\"数据库表\"\n                                                    name=\"tableName\"\n                                                    onChange={this.handleTableNameChange}\n                                                    options={tables.map(item => ({value: item.tableName, label: `${item.tableName} ${item.comment}`}))}\n                                                />\n                                            </FormRow>\n                                        );\n                                    }\n                                    if (type === 'swagger') {\n                                        return (\n                                            <FormRow>\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={400}\n                                                    label=\"接口地址\"\n                                                    name=\"swaggerUrl\"\n                                                    placeholder=\"http(s)://host:port/path\"\n                                                    onChange={this.handleSwaggerChange}\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    type=\"select\"\n                                                    width={100}\n                                                    placeholder=\"接口方法\"\n                                                    name=\"method\"\n                                                    options={[\n                                                        {value: 'get', label: 'GET'},\n                                                        {value: 'post', label: 'POST'},\n                                                        {value: 'put', label: 'PUT'},\n                                                    ]}\n                                                    onChange={this.handleSwaggerChange}\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={120}\n                                                    placeholder=\"Swagger用户\"\n                                                    name=\"userName\"\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={120}\n                                                    placeholder=\"Swagger密码\"\n                                                    name=\"password\"\n                                                />\n                                            </FormRow>\n                                        );\n                                    }\n\n                                    if (type === 'customer') {\n                                        return (\n                                            <FormRow>\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={300}\n                                                    label=\"模块名\"\n                                                    name=\"moduleName\"\n                                                    placeholder=\"比如：user-center\"\n                                                    rules={[{required: true, message: '请输入模块名！'}]}\n                                                    onChange={this.handleModuleNameChange}\n                                                />\n                                            </FormRow>\n                                        );\n                                    }\n                                }}\n                            </Form.Item>\n                            <FormElement layout>\n                                <Button type=\"primary\" onClick={this.handleGen}>生成文件</Button>\n                            </FormElement>\n                        </FormRow>\n                    </Form>\n                </QueryBar>\n                <div style={{marginBottom: 8, display: 'flex', justifyContent: 'space-between'}}>\n                    <Button style={{marginRight: 8}} onClick={() => this.handleAdd()}>添加</Button>\n                    <div style={{paddingRight: 23, paddingTop: 3}}>\n                        {renderTags(table, () => this.setState({table: {...table}}))}\n                    </div>\n                </div>\n                <EditTable\n                    onSortEnd={this.handleSortEnd}\n                    serialNumber\n                    columns={this.columns}\n                    dataSource={table.children}\n                    rowKey=\"id\"\n                />\n            </PageContent>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Tabs} from 'antd';\nimport config from 'src/commons/config-hoc';\nimport PageContent from 'src/layouts/page-content';\nimport Fast from './Fast';\nimport Single from './Single';\nimport './style.less';\n\nconst {TabPane} = Tabs;\n\n@config({\n    title: '代码生成',\n    path: '/gen',\n})\nexport default class index extends Component {\n    render() {\n        return (\n            <PageContent styleName=\"root\">\n                <Tabs defaultActiveKey=\"single\">\n                    <TabPane key=\"fast\" tab=\"快速生成\">\n                        <Fast/>\n                    </TabPane>\n                    <TabPane key=\"single\" tab=\"单独生成\">\n                        <Single/>\n                    </TabPane>\n                </Tabs>\n            </PageContent>\n        );\n    }\n}\n"],"sourceRoot":""}